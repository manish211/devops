var subject = require('./mystery.js')
var mock = require('mock-fs');
subject.inc(31,undefined);
subject.inc(31,"mutated123982832AXZ");
subject.inc(29,undefined);
subject.inc(29,"mutated123982832AXZ");
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest({},"RandomMutation12334dsdf3243");
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest({},"RandomMutation12334dsdf3243");
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest({},"RandomMutation12334dsdf3243");
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest({},"RandomMutation12334dsdf3243");
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest({},'pathNoContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest({},'pathNoContent/file1');
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest({},'pathNoContent/file1');
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest({},'pathNoContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest({},'pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest({},'pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest({},'pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest({},'pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest("RandomMutation12334dsdf3243","RandomMutation12334dsdf3243");
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest("RandomMutation12334dsdf3243","RandomMutation12334dsdf3243");
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest("RandomMutation12334dsdf3243","RandomMutation12334dsdf3243");
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest("RandomMutation12334dsdf3243","RandomMutation12334dsdf3243");
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest("RandomMutation12334dsdf3243",'pathNoContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest("RandomMutation12334dsdf3243",'pathNoContent/file1');
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest("RandomMutation12334dsdf3243",'pathNoContent/file1');
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest("RandomMutation12334dsdf3243",'pathNoContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest("RandomMutation12334dsdf3243",'pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest("RandomMutation12334dsdf3243",'pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest("RandomMutation12334dsdf3243",'pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest("RandomMutation12334dsdf3243",'pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest('pathContent',"RandomMutation12334dsdf3243");
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest('pathContent',"RandomMutation12334dsdf3243");
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest('pathContent',"RandomMutation12334dsdf3243");
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest('pathContent',"RandomMutation12334dsdf3243");
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest('pathContent','pathNoContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest('pathContent','pathNoContent/file1');
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest('pathContent','pathNoContent/file1');
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest('pathContent','pathNoContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest('pathContent','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest('pathContent','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest('pathContent','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathNoContent":{"file1":""}});
	subject.fileTest('pathContent','pathContent/file1');
mock.restore();
subject.normalize("abc123sdfdsjl12e32e");
subject.normalize("12345");
subject.normalize("abcd");
subject.normalize("ABCD");
subject.format("abc123sdfdsjl12e32e","abc123sdfdsjl12e32e",{});
subject.format("abc123sdfdsjl12e32e","abc123sdfdsjl12e32e",true);
subject.format("abc123sdfdsjl12e32e","abc123sdfdsjl12e32e",false);
subject.format("abc123sdfdsjl12e32e","abc123sdfdsjl12e32e",true);
subject.format("abc123sdfdsjl12e32e","abc123sdfdsjl12e32e",false);
subject.format("abc123sdfdsjl12e32e","abc123sdfdsjl12e32e",{ shouldNormalize : true });
subject.format("abc123sdfdsjl12e32e","abc123sdfdsjl12e32e",{ shouldNormalize : false });
subject.format("abc123sdfdsjl12e32e","(NNN) NNN-NNNN",{});
subject.format("abc123sdfdsjl12e32e","(NNN) NNN-NNNN",true);
subject.format("abc123sdfdsjl12e32e","(NNN) NNN-NNNN",false);
subject.format("abc123sdfdsjl12e32e","(NNN) NNN-NNNN",true);
subject.format("abc123sdfdsjl12e32e","(NNN) NNN-NNNN",false);
subject.format("abc123sdfdsjl12e32e","(NNN) NNN-NNNN",{ shouldNormalize : true });
subject.format("abc123sdfdsjl12e32e","(NNN) NNN-NNNN",{ shouldNormalize : false });
subject.format("abc123sdfdsjl12e32e","Nasdfds",{});
subject.format("abc123sdfdsjl12e32e","Nasdfds",true);
subject.format("abc123sdfdsjl12e32e","Nasdfds",false);
subject.format("abc123sdfdsjl12e32e","Nasdfds",true);
subject.format("abc123sdfdsjl12e32e","Nasdfds",false);
subject.format("abc123sdfdsjl12e32e","Nasdfds",{ shouldNormalize : true });
subject.format("abc123sdfdsjl12e32e","Nasdfds",{ shouldNormalize : false });
subject.format("12345","abc123sdfdsjl12e32e",{});
subject.format("12345","abc123sdfdsjl12e32e",true);
subject.format("12345","abc123sdfdsjl12e32e",false);
subject.format("12345","abc123sdfdsjl12e32e",true);
subject.format("12345","abc123sdfdsjl12e32e",false);
subject.format("12345","abc123sdfdsjl12e32e",{ shouldNormalize : true });
subject.format("12345","abc123sdfdsjl12e32e",{ shouldNormalize : false });
subject.format("12345","(NNN) NNN-NNNN",{});
subject.format("12345","(NNN) NNN-NNNN",true);
subject.format("12345","(NNN) NNN-NNNN",false);
subject.format("12345","(NNN) NNN-NNNN",true);
subject.format("12345","(NNN) NNN-NNNN",false);
subject.format("12345","(NNN) NNN-NNNN",{ shouldNormalize : true });
subject.format("12345","(NNN) NNN-NNNN",{ shouldNormalize : false });
subject.format("12345","Nasdfds",{});
subject.format("12345","Nasdfds",true);
subject.format("12345","Nasdfds",false);
subject.format("12345","Nasdfds",true);
subject.format("12345","Nasdfds",false);
subject.format("12345","Nasdfds",{ shouldNormalize : true });
subject.format("12345","Nasdfds",{ shouldNormalize : false });
subject.format("abcd","abc123sdfdsjl12e32e",{});
subject.format("abcd","abc123sdfdsjl12e32e",true);
subject.format("abcd","abc123sdfdsjl12e32e",false);
subject.format("abcd","abc123sdfdsjl12e32e",true);
subject.format("abcd","abc123sdfdsjl12e32e",false);
subject.format("abcd","abc123sdfdsjl12e32e",{ shouldNormalize : true });
subject.format("abcd","abc123sdfdsjl12e32e",{ shouldNormalize : false });
subject.format("abcd","(NNN) NNN-NNNN",{});
subject.format("abcd","(NNN) NNN-NNNN",true);
subject.format("abcd","(NNN) NNN-NNNN",false);
subject.format("abcd","(NNN) NNN-NNNN",true);
subject.format("abcd","(NNN) NNN-NNNN",false);
subject.format("abcd","(NNN) NNN-NNNN",{ shouldNormalize : true });
subject.format("abcd","(NNN) NNN-NNNN",{ shouldNormalize : false });
subject.format("abcd","Nasdfds",{});
subject.format("abcd","Nasdfds",true);
subject.format("abcd","Nasdfds",false);
subject.format("abcd","Nasdfds",true);
subject.format("abcd","Nasdfds",false);
subject.format("abcd","Nasdfds",{ shouldNormalize : true });
subject.format("abcd","Nasdfds",{ shouldNormalize : false });
subject.format("ABCD","abc123sdfdsjl12e32e",{});
subject.format("ABCD","abc123sdfdsjl12e32e",true);
subject.format("ABCD","abc123sdfdsjl12e32e",false);
subject.format("ABCD","abc123sdfdsjl12e32e",true);
subject.format("ABCD","abc123sdfdsjl12e32e",false);
subject.format("ABCD","abc123sdfdsjl12e32e",{ shouldNormalize : true });
subject.format("ABCD","abc123sdfdsjl12e32e",{ shouldNormalize : false });
subject.format("ABCD","(NNN) NNN-NNNN",{});
subject.format("ABCD","(NNN) NNN-NNNN",true);
subject.format("ABCD","(NNN) NNN-NNNN",false);
subject.format("ABCD","(NNN) NNN-NNNN",true);
subject.format("ABCD","(NNN) NNN-NNNN",false);
subject.format("ABCD","(NNN) NNN-NNNN",{ shouldNormalize : true });
subject.format("ABCD","(NNN) NNN-NNNN",{ shouldNormalize : false });
subject.format("ABCD","Nasdfds",{});
subject.format("ABCD","Nasdfds",true);
subject.format("ABCD","Nasdfds",false);
subject.format("ABCD","Nasdfds",true);
subject.format("ABCD","Nasdfds",false);
subject.format("ABCD","Nasdfds",{ shouldNormalize : true });
subject.format("ABCD","Nasdfds",{ shouldNormalize : false });
subject.blackListNumber("abc123sdfdsjl12e32e");
subject.blackListNumber("12345");
subject.blackListNumber("abcd");
subject.blackListNumber("ABCD");
subject.blackListNumber("9199854889");
